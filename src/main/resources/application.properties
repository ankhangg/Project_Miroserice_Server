spring.datasource.url=jdbc:sqlserver://localhost;database=Server_Info;
spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.username=ankhang
spring.datasource.password=luudangankhang

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.hibernate.ddl-auto=update
#show sql
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.application.name=info-app
server.port= 8081
server.servlet.context-path=/info-app

#eureka.client.service-url.defaultZone=http://localhost:9999/eureka/

#eureka.client.service-url.defaultZone=http://localhost:5000/eureka/
eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:5000/eureka

#Indicates how often (in seconds) the eureka client needs to send heartbeats to eureka server(default 30 seconds)
#eureka.instance.lease-renewal-interval-in-seconds=90 

eureka.instance.metadata-map.configPath=/info-app

#can hash any name by your way key - value
eureka.instance.metadata-map.userankhang=luudangankhang

#add info url
management.endpoints.web.exposure.include=*

management.info.env.enabled=true

#config info # can set what ever thing in hear
info.app.name=Microservice_Server_AnKhang
info.app.description=Luu Dang An Khang Author
info.app.version=2806

management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

#jwt.issuer-uri => find the public key needed to verify the signature of the JWT
#jwt.jwk-set-uri => find the collection of public keys that are used to verify the signature
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/spring-boot-microservices-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8181/realms/spring-boot-microservices-realm/protocol/openid-connect/certs